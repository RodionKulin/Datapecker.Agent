<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigModel_ParameterMissing" xml:space="preserve">
    <value>Config parameter {0} of {1} element  is not specified.</value>
  </data>
  <data name="GroupEntryExtensions_ValueConvertException" xml:space="preserve">
    <value>Failed to convert value {0} to property of {1} class.</value>
  </data>
  <data name="GroupEntryExtensions_ValueSetException" xml:space="preserve">
    <value>Failed to set value {0} to property of {1} class.</value>
  </data>
  <data name="ConfigManager_ConfigLoadError" xml:space="preserve">
    <value>Error loading Datapecker configuration.</value>
  </data>
  <data name="ConfigManager_ConfigNotInitialized" xml:space="preserve">
    <value>Configuration must be initialized before using. There were exceptions while loading configuration. If you want to procede with another configuration, then use UpdateConfiguration method to initialize again.</value>
  </data>
  <data name="ConfigManager_DefaultTargetNotFound" xml:space="preserve">
    <value>Default Target not found in configuration.</value>
  </data>
  <data name="ConfigManager_ElementNameInUse" xml:space="preserve">
    <value>{0} element name {1} is already used.</value>
  </data>
  <data name="ConfigManager_StateProviderNotFound" xml:space="preserve">
    <value>IStateProvider with name &lt;{0}&gt; not found.</value>
  </data>
  <data name="ConfigManager_StoragePathInUse" xml:space="preserve">
    <value>Storage path &lt;{0}&gt; is already used for another target.</value>
  </data>
  <data name="ConfigManager_TargetNotFound" xml:space="preserve">
    <value>Target with name &lt;{0}&gt; not found.</value>
  </data>
  <data name="ConfigManager_NoSectionException" xml:space="preserve">
    <value>Section &lt;{0}&gt; is not defined in application config file.</value>
  </data>
  <data name="CustomEvents_StorageException" xml:space="preserve">
    <value>Exception occurred when accessing local storage file.</value>
  </data>
  <data name="Caller_ExceptionMethod" xml:space="preserve">
    <value>Exception occurred in type {0} method {1} line {2}.</value>
  </data>
  <data name="TargetConfig_AppliationIDRequired" xml:space="preserve">
    <value>ApplicationID must be a hexadecimal number 24 digits long.</value>
  </data>
  <data name="InternalCaller_DebugException" xml:space="preserve">
    <value>Internal exception occurred. See exception details.</value>
  </data>
  <data name="StateProviderConfig_ActivationFail" xml:space="preserve">
    <value>Failed to create instance of {0}.</value>
  </data>
  <data name="StateProviderConfig_NotSet" xml:space="preserve">
    <value>StateProvider is not specified.</value>
  </data>
  <data name="StateProviderConfig_TypeNotFound" xml:space="preserve">
    <value>IStateProvider of type &lt;{0}&gt; not found.</value>
  </data>
  <data name="StateProviderConfig_TypeWrongInterface" xml:space="preserve">
    <value>StateProvider type {0} does not implement {1} interface.</value>
  </data>
  <data name="TargetContext_AppSettingsLoadException" xml:space="preserve">
    <value>Exception occurred when loading application settings from local storage file.</value>
  </data>
  <data name="WcfSafeCall_CloseException" xml:space="preserve">
    <value>Close exception while communicating to the server.</value>
  </data>
  <data name="WcfSafeCall_CommunicationException" xml:space="preserve">
    <value>Communication exception while trying to connect to the server.</value>
  </data>
  <data name="WcfSafeCall_ConnectionFailed" xml:space="preserve">
    <value>Connection to the server failed.</value>
  </data>
  <data name="WcfSafeCall_OpenFailed" xml:space="preserve">
    <value>Could not establish connection to the server.</value>
  </data>
  <data name="WcfSafeCall_ServerInternalException" xml:space="preserve">
    <value>Internal server exception.</value>
  </data>
  <data name="WcfSafeCall_TimeoutException" xml:space="preserve">
    <value>Timeout exception while communicating to the server.</value>
  </data>
  <data name="WcfSafeCall_UnknownException" xml:space="preserve">
    <value>Unknown exception while communicating to the server.</value>
  </data>
  <data name="ConfigManager_ConfigNotFoundError" xml:space="preserve">
    <value>Configuration file could not be found or loaded.</value>
  </data>
</root>